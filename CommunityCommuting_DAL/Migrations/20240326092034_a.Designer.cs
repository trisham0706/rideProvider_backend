// <auto-generated />
using System;
using CommunityCommuting_DAL.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace CommunityCommuting_DAL.Migrations
{
    [DbContext(typeof(CommunityCommutingDbContext))]
    [Migration("20240326092034_a")]
    partial class a
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("CommunityCommuting_DAL.Models.Booking", b =>
                {
                    b.Property<string>("bookingId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("numberOfSeat")
                        .HasColumnType("int");

                    b.Property<string>("seekerId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("tripId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("bookingId");

                    b.HasIndex("tripId");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.Fee", b =>
                {
                    b.Property<int>("feeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("feeId"));

                    b.Property<int>("averageInKm")
                        .HasColumnType("int");

                    b.Property<string>("carName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("carPoolCommision")
                        .HasColumnType("int");

                    b.Property<string>("carType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("drivercharges")
                        .HasColumnType("int");

                    b.Property<string>("fuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("wearTearCost")
                        .HasColumnType("int");

                    b.HasKey("feeId");

                    b.ToTable("Fees");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.RideInfo", b =>
                {
                    b.Property<string>("vehicleNo")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("carName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("carType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fuelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("noOfSeats")
                        .HasColumnType("int");

                    b.Property<string>("rpId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("vehicleNo");

                    b.HasIndex("rpId");

                    b.ToTable("RideInfos");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.RideProvide", b =>
                {
                    b.Property<string>("rpId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<long>("adharcard")
                        .HasMaxLength(12)
                        .HasColumnType("bigint");

                    b.Property<int>("age")
                        .HasColumnType("int");

                    b.Property<DateOnly>("birthDate")
                        .HasColumnType("date");

                    b.Property<string>("dlNo")
                        .IsRequired()
                        .HasMaxLength(18)
                        .HasColumnType("nchar(18)")
                        .IsFixedLength()
                        .HasAnnotation("RegexPattern", "^[A-Z0-9]{4}-[A-Z0-9]{3}-[A-Z0-9]{3}-[A-Z0-9]{3}$");

                    b.Property<string>("emailId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("firstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("lastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<long>("phone")
                        .HasColumnType("bigint");

                    b.Property<string>("status")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasAnnotation("AllowedValues", new[] { "Registered", "Un-registered" });

                    b.Property<DateOnly>("validUpto")
                        .HasColumnType("date")
                        .HasAnnotation("MinValue", new DateTime(2024, 4, 25, 14, 50, 33, 867, DateTimeKind.Local).AddTicks(8786));

                    b.HasKey("rpId");

                    b.ToTable("RideProvides");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.Smile", b =>
                {
                    b.Property<int>("smileId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("smileId"));

                    b.Property<string>("destination")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("month")
                        .HasColumnType("int");

                    b.Property<int>("occupancy")
                        .HasColumnType("int");

                    b.Property<string>("rpId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("smileId");

                    b.HasIndex("rpId");

                    b.ToTable("Smiles");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.Trip", b =>
                {
                    b.Property<string>("tripId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("creatorUserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("fromLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("noOfSeat")
                        .HasColumnType("int");

                    b.Property<DateOnly>("rideDate")
                        .HasColumnType("date");

                    b.Property<string>("rideStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<TimeOnly>("rideTime")
                        .HasColumnType("time");

                    b.Property<int>("seatsFilled")
                        .HasColumnType("int");

                    b.Property<string>("toLoc")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("vehicleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tripId");

                    b.ToTable("Trips");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.billMaster", b =>
                {
                    b.Property<string>("billId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("costPerOccupant")
                        .HasColumnType("int");

                    b.Property<int>("feeId")
                        .HasColumnType("int");

                    b.Property<int>("month")
                        .HasColumnType("int");

                    b.Property<int>("noOfKm")
                        .HasColumnType("int");

                    b.Property<int>("noOfOccupants")
                        .HasColumnType("int");

                    b.Property<string>("rideId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("totalbill")
                        .HasColumnType("int");

                    b.HasKey("billId");

                    b.HasIndex("feeId");

                    b.ToTable("billMasters");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.Booking", b =>
                {
                    b.HasOne("CommunityCommuting_DAL.Models.Trip", "trips")
                        .WithMany("bookings")
                        .HasForeignKey("tripId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("trips");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.RideInfo", b =>
                {
                    b.HasOne("CommunityCommuting_DAL.Models.RideProvide", "rideProvide")
                        .WithMany("RideInfos")
                        .HasForeignKey("rpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rideProvide");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.Smile", b =>
                {
                    b.HasOne("CommunityCommuting_DAL.Models.RideInfo", "rideInfo")
                        .WithMany("Smiles")
                        .HasForeignKey("rpId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rideInfo");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.billMaster", b =>
                {
                    b.HasOne("CommunityCommuting_DAL.Models.Fee", "fees")
                        .WithMany("billMasters")
                        .HasForeignKey("feeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("fees");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.Fee", b =>
                {
                    b.Navigation("billMasters");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.RideInfo", b =>
                {
                    b.Navigation("Smiles");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.RideProvide", b =>
                {
                    b.Navigation("RideInfos");
                });

            modelBuilder.Entity("CommunityCommuting_DAL.Models.Trip", b =>
                {
                    b.Navigation("bookings");
                });
#pragma warning restore 612, 618
        }
    }
}
